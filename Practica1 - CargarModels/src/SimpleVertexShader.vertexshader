#version 330 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;

out vec3 myNormal;
out vec3 worldPos;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main() {		
	
	gl_Position = projection * view * model * vec4(position, 1.0);
	worldPos = vec3(model * vec4(position, 1.0f)); //necessitem posicio en el mon del vertex pq fer els calculs d llum pero no ens importa la camara	
	myNormal = mat3(transpose(inverse(model))) * normal; //para adaptar las normales a las transformaciones que hayamos hecho al objeto
}


